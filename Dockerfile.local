ARG ALPINE_VERSION=3.19
FROM alpine:${ALPINE_VERSION}
LABEL Maintainer="Tim de Pater <code@trafex.nl>"
LABEL Description="Lightweight container with Nginx 1.24 & PHP 8.3 based on Alpine Linux."
# Setup document root
WORKDIR /var/www/html

# Install packages and remove default server definition
RUN apk add --no-cache \
  curl \
  nginx \
  php83 \
  php83-ctype \
  php83-curl \
  php83-dom \
  php83-fileinfo \
  php83-fpm \
  php83-gd \
  php83-intl \
  php83-mbstring \
  php83-mysqli \
  php83-opcache \
  php83-openssl \
  php83-phar \
  php83-session \
  php83-tokenizer \
  php83-xml \
  php83-xmlreader \
  php83-xmlwriter \
  supervisor

# Configure nginx - http
COPY docker-php-nginx/config/nginx.conf /etc/nginx/nginx.conf
# Configure nginx - default server
COPY docker-php-nginx/config/conf.d /etc/nginx/conf.d/

# Configure PHP-FPM
ENV PHP_INI_DIR /etc/php83
COPY docker-php-nginx/config/fpm-pool.conf ${PHP_INI_DIR}/php-fpm.d/www.conf
COPY docker-php-nginx/config/php.ini ${PHP_INI_DIR}/conf.d/custom.ini

# Configure supervisord
COPY docker-php-nginx/config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /var/www/html /run /var/lib/nginx /var/log/nginx

# Create symlink for php
RUN ln -s /usr/bin/php83 /usr/bin/php

# whatap-php 
RUN wget https://s3.ap-northeast-2.amazonaws.com/repo.whatap.io/alpine/x86_64/whatap-php.tar.gz
RUN tar -xvzf whatap-php.tar.gz -C /
#RUN (echo "x604lgg8dr1sg-z3qngeer4l2f0k-z7c6le1nlp006d"; echo "13.124.11.223/13.209.172.35")|/usr/whatap/php/install.sh
#RUN /usr/whatap/php/install.sh -l x604lgg8dr1sg-z3qngeer4l2f0k-z7c6le1nlp006d -s 13.124.11.223/13.209.172.35 -e /usr/bin/php83 -p php-fpm
#COPY docker-php-nginx/config/whatap.ini /etc/php83/conf.d/whatap.ini
#COPY docker-php-nginx/config/paramkey.txt /usr/whatap/php/paramkey.txt

# Switch to use a non-root user from here on
USER nobody

# Add application
#COPY --chown=nobody Landing_V2 /var/www/html/

# Expose the port nginx is reachable on
EXPOSE 8080

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# Configure a healthcheck to validate that everything is up&running
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8080/fpm-ping || exit 1
